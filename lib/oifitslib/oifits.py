# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.36
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

"""
This module provides full read-only and limited read-write access
to OIFITS data, by means of an OiFits class. OiFits instances have
a comprehensive set of data attributes (mirroring those in the
OIFITSlib C API) plus a few methods.

Use the OiFits constructor to read an OIFITS file from disk:
>>> import oifits
>>> o = oifits.OiFits('bigtest2.fits')

The resulting OiFits instance may be passed to functions in the
oicheck, oimerge, and oifilter modules. Functions in the latter two
modules create a new OiFits instance, which may be written to an
OIFITS file using the write() method:
>>> o.write('!junk.oifits') # leading ! deletes existing file

We use various sorts of mappings from the C API here. These are
enumerated in the following paragraphs, with accompanying examples of
how to access OiFits attributes from python.

Linked lists of objects are converted to python lists:
>>> print len(o.vis2List[:2])
2
>>> o.vis2List = []
>>> o.numVis2 = 0
>>> print len(o.vis2List)
0

Dictionaries of objects are not mapped, instead we've added methods such 
as get_array() to the top-level class:
>>> print o.get_element('CHARA_2004Jan', 2).sta_index
2
>>> from math import ceil
>>> print ceil(1e9*o.get_eff_wave('IOTA_IONIC_PICNIC')[0])
1650.0

Arrays of objects such as data records are mapped to indexable custom
objects (to avoid making a copy of the data). These are read-only:
>>> rec = o.visList[0].record[2]
>>> print rec.target_id
2

Flag and data primitive-type (e.g. double) arrays are mapped to
indexable custom objects, using carrays.i. Elementwise assignment is
possible (but note there is no bounds checking):
>>> o.t3List[0].record[1].flag[0] = 1
>>> print o.t3List[0].record[1].flag[0]
1

(small) Fixed-dimension primitive-type arrays are converted to python
tuples. Python tuples are immutable, but the entire tuple may be replaced:
>>> o.t3List[0].record[0].sta_index = (1, 2, 3)
>>> print o.t3List[0].record[0].sta_index
(1, 2, 3)

"""

import _oifits
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


def _test():
  import doctest
  doctest.testmod()

if __name__ == '__main__':
  _test()

class waveArray(_object):
    """Proxy of C waveArray struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, waveArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, waveArray, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """__init__(self, size_t nelements) -> waveArray"""
        this = _oifits.new_waveArray(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_waveArray
    __del__ = lambda self : None;
    def __getitem__(*args):
        """__getitem__(self, size_t index) -> float"""
        return _oifits.waveArray___getitem__(*args)

    def __setitem__(*args):
        """__setitem__(self, size_t index, float value)"""
        return _oifits.waveArray___setitem__(*args)

    def cast(*args):
        """cast(self) -> float"""
        return _oifits.waveArray_cast(*args)

    def frompointer(*args):
        """frompointer(float t) -> waveArray"""
        return _oifits.waveArray_frompointer(*args)

    if _newclass:frompointer = staticmethod(frompointer)
    __swig_getmethods__["frompointer"] = lambda x: frompointer
waveArray_swigregister = _oifits.waveArray_swigregister
waveArray_swigregister(waveArray)

def waveArray_frompointer(*args):
  """waveArray_frompointer(float t) -> waveArray"""
  return _oifits.waveArray_frompointer(*args)

class doubleArray(_object):
    """Proxy of C doubleArray struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, doubleArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, doubleArray, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """__init__(self, size_t nelements) -> doubleArray"""
        this = _oifits.new_doubleArray(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_doubleArray
    __del__ = lambda self : None;
    def __getitem__(*args):
        """__getitem__(self, size_t index) -> double"""
        return _oifits.doubleArray___getitem__(*args)

    def __setitem__(*args):
        """__setitem__(self, size_t index, double value)"""
        return _oifits.doubleArray___setitem__(*args)

    def cast(*args):
        """cast(self) -> double"""
        return _oifits.doubleArray_cast(*args)

    def frompointer(*args):
        """frompointer(double t) -> doubleArray"""
        return _oifits.doubleArray_frompointer(*args)

    if _newclass:frompointer = staticmethod(frompointer)
    __swig_getmethods__["frompointer"] = lambda x: frompointer
doubleArray_swigregister = _oifits.doubleArray_swigregister
doubleArray_swigregister(doubleArray)

def doubleArray_frompointer(*args):
  """doubleArray_frompointer(double t) -> doubleArray"""
  return _oifits.doubleArray_frompointer(*args)

class boolArray(_object):
    """Proxy of C boolArray struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, boolArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, boolArray, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """__init__(self, size_t nelements) -> boolArray"""
        this = _oifits.new_boolArray(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_boolArray
    __del__ = lambda self : None;
    def __getitem__(*args):
        """__getitem__(self, size_t index) -> signed char"""
        return _oifits.boolArray___getitem__(*args)

    def __setitem__(*args):
        """__setitem__(self, size_t index, signed char value)"""
        return _oifits.boolArray___setitem__(*args)

    def cast(*args):
        """cast(self) -> signed char"""
        return _oifits.boolArray_cast(*args)

    def frompointer(*args):
        """frompointer(signed char t) -> boolArray"""
        return _oifits.boolArray_frompointer(*args)

    if _newclass:frompointer = staticmethod(frompointer)
    __swig_getmethods__["frompointer"] = lambda x: frompointer
boolArray_swigregister = _oifits.boolArray_swigregister
boolArray_swigregister(boolArray)

def boolArray_frompointer(*args):
  """boolArray_frompointer(signed char t) -> boolArray"""
  return _oifits.boolArray_frompointer(*args)

class element(_object):
    """Proxy of C element struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, element, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, element, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tel_name"] = _oifits.element_tel_name_set
    __swig_getmethods__["tel_name"] = _oifits.element_tel_name_get
    if _newclass:tel_name = _swig_property(_oifits.element_tel_name_get, _oifits.element_tel_name_set)
    __swig_setmethods__["sta_name"] = _oifits.element_sta_name_set
    __swig_getmethods__["sta_name"] = _oifits.element_sta_name_get
    if _newclass:sta_name = _swig_property(_oifits.element_sta_name_get, _oifits.element_sta_name_set)
    __swig_setmethods__["sta_index"] = _oifits.element_sta_index_set
    __swig_getmethods__["sta_index"] = _oifits.element_sta_index_get
    if _newclass:sta_index = _swig_property(_oifits.element_sta_index_get, _oifits.element_sta_index_set)
    __swig_setmethods__["diameter"] = _oifits.element_diameter_set
    __swig_getmethods__["diameter"] = _oifits.element_diameter_get
    if _newclass:diameter = _swig_property(_oifits.element_diameter_get, _oifits.element_diameter_set)
    __swig_setmethods__["staxyz"] = _oifits.element_staxyz_set
    __swig_getmethods__["staxyz"] = _oifits.element_staxyz_get
    if _newclass:staxyz = _swig_property(_oifits.element_staxyz_get, _oifits.element_staxyz_set)
    def __getitem__(*args):
        """__getitem__(self, int i) -> element"""
        return _oifits.element___getitem__(*args)

    def __init__(self, *args): 
        """__init__(self) -> element"""
        this = _oifits.new_element(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_element
    __del__ = lambda self : None;
element_swigregister = _oifits.element_swigregister
element_swigregister(element)
cvar = _oifits.cvar

class oi_array(_object):
    """Proxy of C oi_array struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, oi_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, oi_array, name)
    __repr__ = _swig_repr
    __swig_setmethods__["revision"] = _oifits.oi_array_revision_set
    __swig_getmethods__["revision"] = _oifits.oi_array_revision_get
    if _newclass:revision = _swig_property(_oifits.oi_array_revision_get, _oifits.oi_array_revision_set)
    __swig_setmethods__["arrname"] = _oifits.oi_array_arrname_set
    __swig_getmethods__["arrname"] = _oifits.oi_array_arrname_get
    if _newclass:arrname = _swig_property(_oifits.oi_array_arrname_get, _oifits.oi_array_arrname_set)
    __swig_setmethods__["frame"] = _oifits.oi_array_frame_set
    __swig_getmethods__["frame"] = _oifits.oi_array_frame_get
    if _newclass:frame = _swig_property(_oifits.oi_array_frame_get, _oifits.oi_array_frame_set)
    __swig_setmethods__["arrayx"] = _oifits.oi_array_arrayx_set
    __swig_getmethods__["arrayx"] = _oifits.oi_array_arrayx_get
    if _newclass:arrayx = _swig_property(_oifits.oi_array_arrayx_get, _oifits.oi_array_arrayx_set)
    __swig_setmethods__["arrayy"] = _oifits.oi_array_arrayy_set
    __swig_getmethods__["arrayy"] = _oifits.oi_array_arrayy_get
    if _newclass:arrayy = _swig_property(_oifits.oi_array_arrayy_get, _oifits.oi_array_arrayy_set)
    __swig_setmethods__["arrayz"] = _oifits.oi_array_arrayz_set
    __swig_getmethods__["arrayz"] = _oifits.oi_array_arrayz_get
    if _newclass:arrayz = _swig_property(_oifits.oi_array_arrayz_get, _oifits.oi_array_arrayz_set)
    __swig_setmethods__["nelement"] = _oifits.oi_array_nelement_set
    __swig_getmethods__["nelement"] = _oifits.oi_array_nelement_get
    if _newclass:nelement = _swig_property(_oifits.oi_array_nelement_get, _oifits.oi_array_nelement_set)
    __swig_setmethods__["elem"] = _oifits.oi_array_elem_set
    __swig_getmethods__["elem"] = _oifits.oi_array_elem_get
    if _newclass:elem = _swig_property(_oifits.oi_array_elem_get, _oifits.oi_array_elem_set)
    def __init__(self, *args): 
        """__init__(self) -> oi_array"""
        this = _oifits.new_oi_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_oi_array
    __del__ = lambda self : None;
oi_array_swigregister = _oifits.oi_array_swigregister
oi_array_swigregister(oi_array)

class target(_object):
    """Proxy of C target struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, target, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, target, name)
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_setmethods__["target_id"] = _oifits.target_target_id_set
    __swig_getmethods__["target_id"] = _oifits.target_target_id_get
    if _newclass:target_id = _swig_property(_oifits.target_target_id_get, _oifits.target_target_id_set)
    __swig_setmethods__["target"] = _oifits.target_target_set
    __swig_getmethods__["target"] = _oifits.target_target_get
    if _newclass:target = _swig_property(_oifits.target_target_get, _oifits.target_target_set)
    __swig_setmethods__["raep0"] = _oifits.target_raep0_set
    __swig_getmethods__["raep0"] = _oifits.target_raep0_get
    if _newclass:raep0 = _swig_property(_oifits.target_raep0_get, _oifits.target_raep0_set)
    __swig_setmethods__["decep0"] = _oifits.target_decep0_set
    __swig_getmethods__["decep0"] = _oifits.target_decep0_get
    if _newclass:decep0 = _swig_property(_oifits.target_decep0_get, _oifits.target_decep0_set)
    __swig_setmethods__["equinox"] = _oifits.target_equinox_set
    __swig_getmethods__["equinox"] = _oifits.target_equinox_get
    if _newclass:equinox = _swig_property(_oifits.target_equinox_get, _oifits.target_equinox_set)
    __swig_setmethods__["ra_err"] = _oifits.target_ra_err_set
    __swig_getmethods__["ra_err"] = _oifits.target_ra_err_get
    if _newclass:ra_err = _swig_property(_oifits.target_ra_err_get, _oifits.target_ra_err_set)
    __swig_setmethods__["dec_err"] = _oifits.target_dec_err_set
    __swig_getmethods__["dec_err"] = _oifits.target_dec_err_get
    if _newclass:dec_err = _swig_property(_oifits.target_dec_err_get, _oifits.target_dec_err_set)
    __swig_setmethods__["sysvel"] = _oifits.target_sysvel_set
    __swig_getmethods__["sysvel"] = _oifits.target_sysvel_get
    if _newclass:sysvel = _swig_property(_oifits.target_sysvel_get, _oifits.target_sysvel_set)
    __swig_setmethods__["veltyp"] = _oifits.target_veltyp_set
    __swig_getmethods__["veltyp"] = _oifits.target_veltyp_get
    if _newclass:veltyp = _swig_property(_oifits.target_veltyp_get, _oifits.target_veltyp_set)
    __swig_setmethods__["veldef"] = _oifits.target_veldef_set
    __swig_getmethods__["veldef"] = _oifits.target_veldef_get
    if _newclass:veldef = _swig_property(_oifits.target_veldef_get, _oifits.target_veldef_set)
    __swig_setmethods__["pmra"] = _oifits.target_pmra_set
    __swig_getmethods__["pmra"] = _oifits.target_pmra_get
    if _newclass:pmra = _swig_property(_oifits.target_pmra_get, _oifits.target_pmra_set)
    __swig_setmethods__["pmdec"] = _oifits.target_pmdec_set
    __swig_getmethods__["pmdec"] = _oifits.target_pmdec_get
    if _newclass:pmdec = _swig_property(_oifits.target_pmdec_get, _oifits.target_pmdec_set)
    __swig_setmethods__["pmra_err"] = _oifits.target_pmra_err_set
    __swig_getmethods__["pmra_err"] = _oifits.target_pmra_err_get
    if _newclass:pmra_err = _swig_property(_oifits.target_pmra_err_get, _oifits.target_pmra_err_set)
    __swig_setmethods__["pmdec_err"] = _oifits.target_pmdec_err_set
    __swig_getmethods__["pmdec_err"] = _oifits.target_pmdec_err_get
    if _newclass:pmdec_err = _swig_property(_oifits.target_pmdec_err_get, _oifits.target_pmdec_err_set)
    __swig_setmethods__["parallax"] = _oifits.target_parallax_set
    __swig_getmethods__["parallax"] = _oifits.target_parallax_get
    if _newclass:parallax = _swig_property(_oifits.target_parallax_get, _oifits.target_parallax_set)
    __swig_setmethods__["para_err"] = _oifits.target_para_err_set
    __swig_getmethods__["para_err"] = _oifits.target_para_err_get
    if _newclass:para_err = _swig_property(_oifits.target_para_err_get, _oifits.target_para_err_set)
    __swig_setmethods__["spectyp"] = _oifits.target_spectyp_set
    __swig_getmethods__["spectyp"] = _oifits.target_spectyp_get
    if _newclass:spectyp = _swig_property(_oifits.target_spectyp_get, _oifits.target_spectyp_set)
    def __getitem__(*args):
        """__getitem__(self, int i) -> target"""
        return _oifits.target___getitem__(*args)

    __swig_destroy__ = _oifits.delete_target
    __del__ = lambda self : None;
target_swigregister = _oifits.target_swigregister
target_swigregister(target)

class oi_target(_object):
    """Proxy of C oi_target struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, oi_target, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, oi_target, name)
    __repr__ = _swig_repr
    __swig_setmethods__["revision"] = _oifits.oi_target_revision_set
    __swig_getmethods__["revision"] = _oifits.oi_target_revision_get
    if _newclass:revision = _swig_property(_oifits.oi_target_revision_get, _oifits.oi_target_revision_set)
    __swig_setmethods__["ntarget"] = _oifits.oi_target_ntarget_set
    __swig_getmethods__["ntarget"] = _oifits.oi_target_ntarget_get
    if _newclass:ntarget = _swig_property(_oifits.oi_target_ntarget_get, _oifits.oi_target_ntarget_set)
    __swig_setmethods__["targ"] = _oifits.oi_target_targ_set
    __swig_getmethods__["targ"] = _oifits.oi_target_targ_get
    if _newclass:targ = _swig_property(_oifits.oi_target_targ_get, _oifits.oi_target_targ_set)
    def __init__(self, *args): 
        """__init__(self) -> oi_target"""
        this = _oifits.new_oi_target(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_oi_target
    __del__ = lambda self : None;
oi_target_swigregister = _oifits.oi_target_swigregister
oi_target_swigregister(oi_target)

class oi_wavelength(_object):
    """Proxy of C oi_wavelength struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, oi_wavelength, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, oi_wavelength, name)
    __repr__ = _swig_repr
    __swig_setmethods__["revision"] = _oifits.oi_wavelength_revision_set
    __swig_getmethods__["revision"] = _oifits.oi_wavelength_revision_get
    if _newclass:revision = _swig_property(_oifits.oi_wavelength_revision_get, _oifits.oi_wavelength_revision_set)
    __swig_setmethods__["insname"] = _oifits.oi_wavelength_insname_set
    __swig_getmethods__["insname"] = _oifits.oi_wavelength_insname_get
    if _newclass:insname = _swig_property(_oifits.oi_wavelength_insname_get, _oifits.oi_wavelength_insname_set)
    __swig_setmethods__["nwave"] = _oifits.oi_wavelength_nwave_set
    __swig_getmethods__["nwave"] = _oifits.oi_wavelength_nwave_get
    if _newclass:nwave = _swig_property(_oifits.oi_wavelength_nwave_get, _oifits.oi_wavelength_nwave_set)
    __swig_setmethods__["eff_wave"] = _oifits.oi_wavelength_eff_wave_set
    __swig_getmethods__["eff_wave"] = _oifits.oi_wavelength_eff_wave_get
    if _newclass:eff_wave = _swig_property(_oifits.oi_wavelength_eff_wave_get, _oifits.oi_wavelength_eff_wave_set)
    __swig_setmethods__["eff_band"] = _oifits.oi_wavelength_eff_band_set
    __swig_getmethods__["eff_band"] = _oifits.oi_wavelength_eff_band_get
    if _newclass:eff_band = _swig_property(_oifits.oi_wavelength_eff_band_get, _oifits.oi_wavelength_eff_band_set)
    def __init__(self, *args): 
        """__init__(self) -> oi_wavelength"""
        this = _oifits.new_oi_wavelength(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_oi_wavelength
    __del__ = lambda self : None;
oi_wavelength_swigregister = _oifits.oi_wavelength_swigregister
oi_wavelength_swigregister(oi_wavelength)

class oi_vis_record(_object):
    """Proxy of C oi_vis_record struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, oi_vis_record, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, oi_vis_record, name)
    __repr__ = _swig_repr
    __swig_setmethods__["target_id"] = _oifits.oi_vis_record_target_id_set
    __swig_getmethods__["target_id"] = _oifits.oi_vis_record_target_id_get
    if _newclass:target_id = _swig_property(_oifits.oi_vis_record_target_id_get, _oifits.oi_vis_record_target_id_set)
    __swig_setmethods__["time"] = _oifits.oi_vis_record_time_set
    __swig_getmethods__["time"] = _oifits.oi_vis_record_time_get
    if _newclass:time = _swig_property(_oifits.oi_vis_record_time_get, _oifits.oi_vis_record_time_set)
    __swig_setmethods__["mjd"] = _oifits.oi_vis_record_mjd_set
    __swig_getmethods__["mjd"] = _oifits.oi_vis_record_mjd_get
    if _newclass:mjd = _swig_property(_oifits.oi_vis_record_mjd_get, _oifits.oi_vis_record_mjd_set)
    __swig_setmethods__["int_time"] = _oifits.oi_vis_record_int_time_set
    __swig_getmethods__["int_time"] = _oifits.oi_vis_record_int_time_get
    if _newclass:int_time = _swig_property(_oifits.oi_vis_record_int_time_get, _oifits.oi_vis_record_int_time_set)
    __swig_setmethods__["visamp"] = _oifits.oi_vis_record_visamp_set
    __swig_getmethods__["visamp"] = _oifits.oi_vis_record_visamp_get
    if _newclass:visamp = _swig_property(_oifits.oi_vis_record_visamp_get, _oifits.oi_vis_record_visamp_set)
    __swig_setmethods__["visamperr"] = _oifits.oi_vis_record_visamperr_set
    __swig_getmethods__["visamperr"] = _oifits.oi_vis_record_visamperr_get
    if _newclass:visamperr = _swig_property(_oifits.oi_vis_record_visamperr_get, _oifits.oi_vis_record_visamperr_set)
    __swig_setmethods__["visphi"] = _oifits.oi_vis_record_visphi_set
    __swig_getmethods__["visphi"] = _oifits.oi_vis_record_visphi_get
    if _newclass:visphi = _swig_property(_oifits.oi_vis_record_visphi_get, _oifits.oi_vis_record_visphi_set)
    __swig_setmethods__["visphierr"] = _oifits.oi_vis_record_visphierr_set
    __swig_getmethods__["visphierr"] = _oifits.oi_vis_record_visphierr_get
    if _newclass:visphierr = _swig_property(_oifits.oi_vis_record_visphierr_get, _oifits.oi_vis_record_visphierr_set)
    __swig_setmethods__["ucoord"] = _oifits.oi_vis_record_ucoord_set
    __swig_getmethods__["ucoord"] = _oifits.oi_vis_record_ucoord_get
    if _newclass:ucoord = _swig_property(_oifits.oi_vis_record_ucoord_get, _oifits.oi_vis_record_ucoord_set)
    __swig_setmethods__["vcoord"] = _oifits.oi_vis_record_vcoord_set
    __swig_getmethods__["vcoord"] = _oifits.oi_vis_record_vcoord_get
    if _newclass:vcoord = _swig_property(_oifits.oi_vis_record_vcoord_get, _oifits.oi_vis_record_vcoord_set)
    __swig_setmethods__["sta_index"] = _oifits.oi_vis_record_sta_index_set
    __swig_getmethods__["sta_index"] = _oifits.oi_vis_record_sta_index_get
    if _newclass:sta_index = _swig_property(_oifits.oi_vis_record_sta_index_get, _oifits.oi_vis_record_sta_index_set)
    __swig_setmethods__["flag"] = _oifits.oi_vis_record_flag_set
    __swig_getmethods__["flag"] = _oifits.oi_vis_record_flag_get
    if _newclass:flag = _swig_property(_oifits.oi_vis_record_flag_get, _oifits.oi_vis_record_flag_set)
    def __getitem__(*args):
        """__getitem__(self, int i) -> oi_vis_record"""
        return _oifits.oi_vis_record___getitem__(*args)

    def __init__(self, *args): 
        """__init__(self) -> oi_vis_record"""
        this = _oifits.new_oi_vis_record(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_oi_vis_record
    __del__ = lambda self : None;
oi_vis_record_swigregister = _oifits.oi_vis_record_swigregister
oi_vis_record_swigregister(oi_vis_record)

class oi_vis(_object):
    """Proxy of C oi_vis struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, oi_vis, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, oi_vis, name)
    __repr__ = _swig_repr
    __swig_setmethods__["revision"] = _oifits.oi_vis_revision_set
    __swig_getmethods__["revision"] = _oifits.oi_vis_revision_get
    if _newclass:revision = _swig_property(_oifits.oi_vis_revision_get, _oifits.oi_vis_revision_set)
    __swig_setmethods__["date_obs"] = _oifits.oi_vis_date_obs_set
    __swig_getmethods__["date_obs"] = _oifits.oi_vis_date_obs_get
    if _newclass:date_obs = _swig_property(_oifits.oi_vis_date_obs_get, _oifits.oi_vis_date_obs_set)
    __swig_setmethods__["arrname"] = _oifits.oi_vis_arrname_set
    __swig_getmethods__["arrname"] = _oifits.oi_vis_arrname_get
    if _newclass:arrname = _swig_property(_oifits.oi_vis_arrname_get, _oifits.oi_vis_arrname_set)
    __swig_setmethods__["insname"] = _oifits.oi_vis_insname_set
    __swig_getmethods__["insname"] = _oifits.oi_vis_insname_get
    if _newclass:insname = _swig_property(_oifits.oi_vis_insname_get, _oifits.oi_vis_insname_set)
    __swig_setmethods__["numrec"] = _oifits.oi_vis_numrec_set
    __swig_getmethods__["numrec"] = _oifits.oi_vis_numrec_get
    if _newclass:numrec = _swig_property(_oifits.oi_vis_numrec_get, _oifits.oi_vis_numrec_set)
    __swig_setmethods__["nwave"] = _oifits.oi_vis_nwave_set
    __swig_getmethods__["nwave"] = _oifits.oi_vis_nwave_get
    if _newclass:nwave = _swig_property(_oifits.oi_vis_nwave_get, _oifits.oi_vis_nwave_set)
    __swig_setmethods__["record"] = _oifits.oi_vis_record_set
    __swig_getmethods__["record"] = _oifits.oi_vis_record_get
    if _newclass:record = _swig_property(_oifits.oi_vis_record_get, _oifits.oi_vis_record_set)
    def __init__(self, *args): 
        """__init__(self) -> oi_vis"""
        this = _oifits.new_oi_vis(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_oi_vis
    __del__ = lambda self : None;
oi_vis_swigregister = _oifits.oi_vis_swigregister
oi_vis_swigregister(oi_vis)

class oi_vis2_record(_object):
    """Proxy of C oi_vis2_record struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, oi_vis2_record, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, oi_vis2_record, name)
    __repr__ = _swig_repr
    __swig_setmethods__["target_id"] = _oifits.oi_vis2_record_target_id_set
    __swig_getmethods__["target_id"] = _oifits.oi_vis2_record_target_id_get
    if _newclass:target_id = _swig_property(_oifits.oi_vis2_record_target_id_get, _oifits.oi_vis2_record_target_id_set)
    __swig_setmethods__["time"] = _oifits.oi_vis2_record_time_set
    __swig_getmethods__["time"] = _oifits.oi_vis2_record_time_get
    if _newclass:time = _swig_property(_oifits.oi_vis2_record_time_get, _oifits.oi_vis2_record_time_set)
    __swig_setmethods__["mjd"] = _oifits.oi_vis2_record_mjd_set
    __swig_getmethods__["mjd"] = _oifits.oi_vis2_record_mjd_get
    if _newclass:mjd = _swig_property(_oifits.oi_vis2_record_mjd_get, _oifits.oi_vis2_record_mjd_set)
    __swig_setmethods__["int_time"] = _oifits.oi_vis2_record_int_time_set
    __swig_getmethods__["int_time"] = _oifits.oi_vis2_record_int_time_get
    if _newclass:int_time = _swig_property(_oifits.oi_vis2_record_int_time_get, _oifits.oi_vis2_record_int_time_set)
    __swig_setmethods__["vis2data"] = _oifits.oi_vis2_record_vis2data_set
    __swig_getmethods__["vis2data"] = _oifits.oi_vis2_record_vis2data_get
    if _newclass:vis2data = _swig_property(_oifits.oi_vis2_record_vis2data_get, _oifits.oi_vis2_record_vis2data_set)
    __swig_setmethods__["vis2err"] = _oifits.oi_vis2_record_vis2err_set
    __swig_getmethods__["vis2err"] = _oifits.oi_vis2_record_vis2err_get
    if _newclass:vis2err = _swig_property(_oifits.oi_vis2_record_vis2err_get, _oifits.oi_vis2_record_vis2err_set)
    __swig_setmethods__["ucoord"] = _oifits.oi_vis2_record_ucoord_set
    __swig_getmethods__["ucoord"] = _oifits.oi_vis2_record_ucoord_get
    if _newclass:ucoord = _swig_property(_oifits.oi_vis2_record_ucoord_get, _oifits.oi_vis2_record_ucoord_set)
    __swig_setmethods__["vcoord"] = _oifits.oi_vis2_record_vcoord_set
    __swig_getmethods__["vcoord"] = _oifits.oi_vis2_record_vcoord_get
    if _newclass:vcoord = _swig_property(_oifits.oi_vis2_record_vcoord_get, _oifits.oi_vis2_record_vcoord_set)
    __swig_setmethods__["sta_index"] = _oifits.oi_vis2_record_sta_index_set
    __swig_getmethods__["sta_index"] = _oifits.oi_vis2_record_sta_index_get
    if _newclass:sta_index = _swig_property(_oifits.oi_vis2_record_sta_index_get, _oifits.oi_vis2_record_sta_index_set)
    __swig_setmethods__["flag"] = _oifits.oi_vis2_record_flag_set
    __swig_getmethods__["flag"] = _oifits.oi_vis2_record_flag_get
    if _newclass:flag = _swig_property(_oifits.oi_vis2_record_flag_get, _oifits.oi_vis2_record_flag_set)
    def __getitem__(*args):
        """__getitem__(self, int i) -> oi_vis2_record"""
        return _oifits.oi_vis2_record___getitem__(*args)

    def __init__(self, *args): 
        """__init__(self) -> oi_vis2_record"""
        this = _oifits.new_oi_vis2_record(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_oi_vis2_record
    __del__ = lambda self : None;
oi_vis2_record_swigregister = _oifits.oi_vis2_record_swigregister
oi_vis2_record_swigregister(oi_vis2_record)

class oi_vis2(_object):
    """Proxy of C oi_vis2 struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, oi_vis2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, oi_vis2, name)
    __repr__ = _swig_repr
    __swig_setmethods__["revision"] = _oifits.oi_vis2_revision_set
    __swig_getmethods__["revision"] = _oifits.oi_vis2_revision_get
    if _newclass:revision = _swig_property(_oifits.oi_vis2_revision_get, _oifits.oi_vis2_revision_set)
    __swig_setmethods__["date_obs"] = _oifits.oi_vis2_date_obs_set
    __swig_getmethods__["date_obs"] = _oifits.oi_vis2_date_obs_get
    if _newclass:date_obs = _swig_property(_oifits.oi_vis2_date_obs_get, _oifits.oi_vis2_date_obs_set)
    __swig_setmethods__["arrname"] = _oifits.oi_vis2_arrname_set
    __swig_getmethods__["arrname"] = _oifits.oi_vis2_arrname_get
    if _newclass:arrname = _swig_property(_oifits.oi_vis2_arrname_get, _oifits.oi_vis2_arrname_set)
    __swig_setmethods__["insname"] = _oifits.oi_vis2_insname_set
    __swig_getmethods__["insname"] = _oifits.oi_vis2_insname_get
    if _newclass:insname = _swig_property(_oifits.oi_vis2_insname_get, _oifits.oi_vis2_insname_set)
    __swig_setmethods__["numrec"] = _oifits.oi_vis2_numrec_set
    __swig_getmethods__["numrec"] = _oifits.oi_vis2_numrec_get
    if _newclass:numrec = _swig_property(_oifits.oi_vis2_numrec_get, _oifits.oi_vis2_numrec_set)
    __swig_setmethods__["nwave"] = _oifits.oi_vis2_nwave_set
    __swig_getmethods__["nwave"] = _oifits.oi_vis2_nwave_get
    if _newclass:nwave = _swig_property(_oifits.oi_vis2_nwave_get, _oifits.oi_vis2_nwave_set)
    __swig_setmethods__["record"] = _oifits.oi_vis2_record_set
    __swig_getmethods__["record"] = _oifits.oi_vis2_record_get
    if _newclass:record = _swig_property(_oifits.oi_vis2_record_get, _oifits.oi_vis2_record_set)
    def __init__(self, *args): 
        """__init__(self) -> oi_vis2"""
        this = _oifits.new_oi_vis2(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_oi_vis2
    __del__ = lambda self : None;
oi_vis2_swigregister = _oifits.oi_vis2_swigregister
oi_vis2_swigregister(oi_vis2)

class oi_t3_record(_object):
    """Proxy of C oi_t3_record struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, oi_t3_record, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, oi_t3_record, name)
    __repr__ = _swig_repr
    __swig_setmethods__["target_id"] = _oifits.oi_t3_record_target_id_set
    __swig_getmethods__["target_id"] = _oifits.oi_t3_record_target_id_get
    if _newclass:target_id = _swig_property(_oifits.oi_t3_record_target_id_get, _oifits.oi_t3_record_target_id_set)
    __swig_setmethods__["time"] = _oifits.oi_t3_record_time_set
    __swig_getmethods__["time"] = _oifits.oi_t3_record_time_get
    if _newclass:time = _swig_property(_oifits.oi_t3_record_time_get, _oifits.oi_t3_record_time_set)
    __swig_setmethods__["mjd"] = _oifits.oi_t3_record_mjd_set
    __swig_getmethods__["mjd"] = _oifits.oi_t3_record_mjd_get
    if _newclass:mjd = _swig_property(_oifits.oi_t3_record_mjd_get, _oifits.oi_t3_record_mjd_set)
    __swig_setmethods__["int_time"] = _oifits.oi_t3_record_int_time_set
    __swig_getmethods__["int_time"] = _oifits.oi_t3_record_int_time_get
    if _newclass:int_time = _swig_property(_oifits.oi_t3_record_int_time_get, _oifits.oi_t3_record_int_time_set)
    __swig_setmethods__["t3amp"] = _oifits.oi_t3_record_t3amp_set
    __swig_getmethods__["t3amp"] = _oifits.oi_t3_record_t3amp_get
    if _newclass:t3amp = _swig_property(_oifits.oi_t3_record_t3amp_get, _oifits.oi_t3_record_t3amp_set)
    __swig_setmethods__["t3amperr"] = _oifits.oi_t3_record_t3amperr_set
    __swig_getmethods__["t3amperr"] = _oifits.oi_t3_record_t3amperr_get
    if _newclass:t3amperr = _swig_property(_oifits.oi_t3_record_t3amperr_get, _oifits.oi_t3_record_t3amperr_set)
    __swig_setmethods__["t3phi"] = _oifits.oi_t3_record_t3phi_set
    __swig_getmethods__["t3phi"] = _oifits.oi_t3_record_t3phi_get
    if _newclass:t3phi = _swig_property(_oifits.oi_t3_record_t3phi_get, _oifits.oi_t3_record_t3phi_set)
    __swig_setmethods__["t3phierr"] = _oifits.oi_t3_record_t3phierr_set
    __swig_getmethods__["t3phierr"] = _oifits.oi_t3_record_t3phierr_get
    if _newclass:t3phierr = _swig_property(_oifits.oi_t3_record_t3phierr_get, _oifits.oi_t3_record_t3phierr_set)
    __swig_setmethods__["u1coord"] = _oifits.oi_t3_record_u1coord_set
    __swig_getmethods__["u1coord"] = _oifits.oi_t3_record_u1coord_get
    if _newclass:u1coord = _swig_property(_oifits.oi_t3_record_u1coord_get, _oifits.oi_t3_record_u1coord_set)
    __swig_setmethods__["v1coord"] = _oifits.oi_t3_record_v1coord_set
    __swig_getmethods__["v1coord"] = _oifits.oi_t3_record_v1coord_get
    if _newclass:v1coord = _swig_property(_oifits.oi_t3_record_v1coord_get, _oifits.oi_t3_record_v1coord_set)
    __swig_setmethods__["u2coord"] = _oifits.oi_t3_record_u2coord_set
    __swig_getmethods__["u2coord"] = _oifits.oi_t3_record_u2coord_get
    if _newclass:u2coord = _swig_property(_oifits.oi_t3_record_u2coord_get, _oifits.oi_t3_record_u2coord_set)
    __swig_setmethods__["v2coord"] = _oifits.oi_t3_record_v2coord_set
    __swig_getmethods__["v2coord"] = _oifits.oi_t3_record_v2coord_get
    if _newclass:v2coord = _swig_property(_oifits.oi_t3_record_v2coord_get, _oifits.oi_t3_record_v2coord_set)
    __swig_setmethods__["sta_index"] = _oifits.oi_t3_record_sta_index_set
    __swig_getmethods__["sta_index"] = _oifits.oi_t3_record_sta_index_get
    if _newclass:sta_index = _swig_property(_oifits.oi_t3_record_sta_index_get, _oifits.oi_t3_record_sta_index_set)
    __swig_setmethods__["flag"] = _oifits.oi_t3_record_flag_set
    __swig_getmethods__["flag"] = _oifits.oi_t3_record_flag_get
    if _newclass:flag = _swig_property(_oifits.oi_t3_record_flag_get, _oifits.oi_t3_record_flag_set)
    def __getitem__(*args):
        """__getitem__(self, int i) -> oi_t3_record"""
        return _oifits.oi_t3_record___getitem__(*args)

    def __init__(self, *args): 
        """__init__(self) -> oi_t3_record"""
        this = _oifits.new_oi_t3_record(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_oi_t3_record
    __del__ = lambda self : None;
oi_t3_record_swigregister = _oifits.oi_t3_record_swigregister
oi_t3_record_swigregister(oi_t3_record)

class oi_t3(_object):
    """Proxy of C oi_t3 struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, oi_t3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, oi_t3, name)
    __repr__ = _swig_repr
    __swig_setmethods__["revision"] = _oifits.oi_t3_revision_set
    __swig_getmethods__["revision"] = _oifits.oi_t3_revision_get
    if _newclass:revision = _swig_property(_oifits.oi_t3_revision_get, _oifits.oi_t3_revision_set)
    __swig_setmethods__["date_obs"] = _oifits.oi_t3_date_obs_set
    __swig_getmethods__["date_obs"] = _oifits.oi_t3_date_obs_get
    if _newclass:date_obs = _swig_property(_oifits.oi_t3_date_obs_get, _oifits.oi_t3_date_obs_set)
    __swig_setmethods__["arrname"] = _oifits.oi_t3_arrname_set
    __swig_getmethods__["arrname"] = _oifits.oi_t3_arrname_get
    if _newclass:arrname = _swig_property(_oifits.oi_t3_arrname_get, _oifits.oi_t3_arrname_set)
    __swig_setmethods__["insname"] = _oifits.oi_t3_insname_set
    __swig_getmethods__["insname"] = _oifits.oi_t3_insname_get
    if _newclass:insname = _swig_property(_oifits.oi_t3_insname_get, _oifits.oi_t3_insname_set)
    __swig_setmethods__["numrec"] = _oifits.oi_t3_numrec_set
    __swig_getmethods__["numrec"] = _oifits.oi_t3_numrec_get
    if _newclass:numrec = _swig_property(_oifits.oi_t3_numrec_get, _oifits.oi_t3_numrec_set)
    __swig_setmethods__["nwave"] = _oifits.oi_t3_nwave_set
    __swig_getmethods__["nwave"] = _oifits.oi_t3_nwave_get
    if _newclass:nwave = _swig_property(_oifits.oi_t3_nwave_get, _oifits.oi_t3_nwave_set)
    __swig_setmethods__["record"] = _oifits.oi_t3_record_set
    __swig_getmethods__["record"] = _oifits.oi_t3_record_get
    if _newclass:record = _swig_property(_oifits.oi_t3_record_get, _oifits.oi_t3_record_set)
    def __init__(self, *args): 
        """__init__(self) -> oi_t3"""
        this = _oifits.new_oi_t3(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_oi_t3
    __del__ = lambda self : None;
oi_t3_swigregister = _oifits.oi_t3_swigregister
oi_t3_swigregister(oi_t3)


def write_oi_array(*args):
  """write_oi_array(fitsfile fptr, oi_array array, int extver, STATUS pStatus) -> STATUS"""
  return _oifits.write_oi_array(*args)

def write_oi_target(*args):
  """write_oi_target(fitsfile fptr, oi_target targets, STATUS pStatus) -> STATUS"""
  return _oifits.write_oi_target(*args)

def write_oi_wavelength(*args):
  """write_oi_wavelength(fitsfile fptr, oi_wavelength wave, int extver, STATUS pStatus) -> STATUS"""
  return _oifits.write_oi_wavelength(*args)

def write_oi_vis(*args):
  """write_oi_vis(fitsfile fptr, oi_vis vis, int extver, STATUS pStatus) -> STATUS"""
  return _oifits.write_oi_vis(*args)

def write_oi_vis2(*args):
  """write_oi_vis2(fitsfile fptr, oi_vis2 vis2, int extver, STATUS pStatus) -> STATUS"""
  return _oifits.write_oi_vis2(*args)

def write_oi_t3(*args):
  """write_oi_t3(fitsfile fptr, oi_t3 t3, int extver, STATUS pStatus) -> STATUS"""
  return _oifits.write_oi_t3(*args)

def read_oi_target(*args):
  """read_oi_target(fitsfile fptr, oi_target pTargets, STATUS pStatus) -> STATUS"""
  return _oifits.read_oi_target(*args)

def read_oi_array(*args):
  """read_oi_array(fitsfile fptr, char arrname, oi_array pArray, STATUS pStatus) -> STATUS"""
  return _oifits.read_oi_array(*args)

def read_next_oi_array(*args):
  """read_next_oi_array(fitsfile fptr, oi_array pArray, STATUS pStatus) -> STATUS"""
  return _oifits.read_next_oi_array(*args)

def read_oi_wavelength(*args):
  """read_oi_wavelength(fitsfile fptr, char insname, oi_wavelength pWave, STATUS pStatus) -> STATUS"""
  return _oifits.read_oi_wavelength(*args)

def read_next_oi_wavelength(*args):
  """read_next_oi_wavelength(fitsfile fptr, oi_wavelength pWave, STATUS pStatus) -> STATUS"""
  return _oifits.read_next_oi_wavelength(*args)

def read_next_oi_vis(*args):
  """read_next_oi_vis(fitsfile fptr, oi_vis pVis, STATUS pStatus) -> STATUS"""
  return _oifits.read_next_oi_vis(*args)

def read_next_oi_vis2(*args):
  """read_next_oi_vis2(fitsfile fptr, oi_vis2 pVis2, STATUS pStatus) -> STATUS"""
  return _oifits.read_next_oi_vis2(*args)

def read_next_oi_t3(*args):
  """read_next_oi_t3(fitsfile fptr, oi_t3 pT3, STATUS pStatus) -> STATUS"""
  return _oifits.read_next_oi_t3(*args)

def free_oi_array(*args):
  """free_oi_array(oi_array pArray)"""
  return _oifits.free_oi_array(*args)

def free_oi_target(*args):
  """free_oi_target(oi_target pTargets)"""
  return _oifits.free_oi_target(*args)

def free_oi_wavelength(*args):
  """free_oi_wavelength(oi_wavelength pWave)"""
  return _oifits.free_oi_wavelength(*args)

def free_oi_vis(*args):
  """free_oi_vis(oi_vis pVis)"""
  return _oifits.free_oi_vis(*args)

def free_oi_vis2(*args):
  """free_oi_vis2(oi_vis2 pVis2)"""
  return _oifits.free_oi_vis2(*args)

def free_oi_t3(*args):
  """free_oi_t3(oi_t3 pT3)"""
  return _oifits.free_oi_t3(*args)
class OiFits(_object):
    """Proxy of C OiFits struct"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OiFits, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OiFits, name)
    __repr__ = _swig_repr
    __swig_setmethods__["numArray"] = _oifits.OiFits_numArray_set
    __swig_getmethods__["numArray"] = _oifits.OiFits_numArray_get
    if _newclass:numArray = _swig_property(_oifits.OiFits_numArray_get, _oifits.OiFits_numArray_set)
    __swig_setmethods__["numWavelength"] = _oifits.OiFits_numWavelength_set
    __swig_getmethods__["numWavelength"] = _oifits.OiFits_numWavelength_get
    if _newclass:numWavelength = _swig_property(_oifits.OiFits_numWavelength_get, _oifits.OiFits_numWavelength_set)
    __swig_setmethods__["numVis"] = _oifits.OiFits_numVis_set
    __swig_getmethods__["numVis"] = _oifits.OiFits_numVis_get
    if _newclass:numVis = _swig_property(_oifits.OiFits_numVis_get, _oifits.OiFits_numVis_set)
    __swig_setmethods__["numVis2"] = _oifits.OiFits_numVis2_set
    __swig_getmethods__["numVis2"] = _oifits.OiFits_numVis2_get
    if _newclass:numVis2 = _swig_property(_oifits.OiFits_numVis2_get, _oifits.OiFits_numVis2_set)
    __swig_setmethods__["numT3"] = _oifits.OiFits_numT3_set
    __swig_getmethods__["numT3"] = _oifits.OiFits_numT3_get
    if _newclass:numT3 = _swig_property(_oifits.OiFits_numT3_get, _oifits.OiFits_numT3_set)
    __swig_setmethods__["targets"] = _oifits.OiFits_targets_set
    __swig_getmethods__["targets"] = _oifits.OiFits_targets_get
    if _newclass:targets = _swig_property(_oifits.OiFits_targets_get, _oifits.OiFits_targets_set)
    __swig_setmethods__["arrayList"] = _oifits.OiFits_arrayList_set
    __swig_getmethods__["arrayList"] = _oifits.OiFits_arrayList_get
    if _newclass:arrayList = _swig_property(_oifits.OiFits_arrayList_get, _oifits.OiFits_arrayList_set)
    __swig_setmethods__["wavelengthList"] = _oifits.OiFits_wavelengthList_set
    __swig_getmethods__["wavelengthList"] = _oifits.OiFits_wavelengthList_get
    if _newclass:wavelengthList = _swig_property(_oifits.OiFits_wavelengthList_get, _oifits.OiFits_wavelengthList_set)
    __swig_setmethods__["visList"] = _oifits.OiFits_visList_set
    __swig_getmethods__["visList"] = _oifits.OiFits_visList_get
    if _newclass:visList = _swig_property(_oifits.OiFits_visList_get, _oifits.OiFits_visList_set)
    __swig_setmethods__["vis2List"] = _oifits.OiFits_vis2List_set
    __swig_getmethods__["vis2List"] = _oifits.OiFits_vis2List_get
    if _newclass:vis2List = _swig_property(_oifits.OiFits_vis2List_get, _oifits.OiFits_vis2List_set)
    __swig_setmethods__["t3List"] = _oifits.OiFits_t3List_set
    __swig_getmethods__["t3List"] = _oifits.OiFits_t3List_get
    if _newclass:t3List = _swig_property(_oifits.OiFits_t3List_get, _oifits.OiFits_t3List_set)
    def __init__(self, *args): 
        """OiFits(filename=None) -> OiFits"""
        this = _oifits.new_OiFits(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _oifits.delete_OiFits
    __del__ = lambda self : None;
    def __str__(*args):
        """__str__(self) -> char"""
        return _oifits.OiFits___str__(*args)

    def write(*args):
        """write(filename)"""
        return _oifits.OiFits_write(*args)

    __swig_setmethods__["numTargets"] = _oifits.OiFits_numTargets_set
    __swig_getmethods__["numTargets"] = _oifits.OiFits_numTargets_get
    if _newclass:numTargets = _swig_property(_oifits.OiFits_numTargets_get, _oifits.OiFits_numTargets_set)
    def get_target(*args):
        """get_target(self, int targetId) -> target"""
        return _oifits.OiFits_get_target(*args)

    def get_nelement(*args):
        """get_nelement(self, char arrname) -> int"""
        return _oifits.OiFits_get_nelement(*args)

    def get_element(*args):
        """get_element(self, char arrname, int staIndex) -> element"""
        return _oifits.OiFits_get_element(*args)

    def get_nwave(*args):
        """get_nwave(self, char insname) -> int"""
        return _oifits.OiFits_get_nwave(*args)

    def get_eff_wave(*args):
        """get_eff_wave(self, char insname) -> waveArray"""
        return _oifits.OiFits_get_eff_wave(*args)

    def get_eff_band(*args):
        """get_eff_band(self, char insname) -> waveArray"""
        return _oifits.OiFits_get_eff_band(*args)

OiFits_swigregister = _oifits.OiFits_swigregister
OiFits_swigregister(OiFits)


def init_oi_fits(*args):
  """init_oi_fits(OiFits ?)"""
  return _oifits.init_oi_fits(*args)

def read_oi_fits(*args):
  """read_oi_fits(char ?, OiFits ?, STATUS ?) -> STATUS"""
  return _oifits.read_oi_fits(*args)

def free_oi_fits(*args):
  """free_oi_fits(OiFits ?)"""
  return _oifits.free_oi_fits(*args)

def oi_fits_lookup_array(*args):
  """oi_fits_lookup_array(OiFits ?, char ?) -> oi_array"""
  return _oifits.oi_fits_lookup_array(*args)

def oi_fits_lookup_element(*args):
  """oi_fits_lookup_element(OiFits ?, char ?, int ?) -> element"""
  return _oifits.oi_fits_lookup_element(*args)

def oi_fits_lookup_wavelength(*args):
  """oi_fits_lookup_wavelength(OiFits ?, char ?) -> oi_wavelength"""
  return _oifits.oi_fits_lookup_wavelength(*args)

def oi_fits_lookup_target(*args):
  """oi_fits_lookup_target(OiFits ?, int ?) -> target"""
  return _oifits.oi_fits_lookup_target(*args)

def format_oi_fits_summary(*args):
  """format_oi_fits_summary(OiFits ?) -> char"""
  return _oifits.format_oi_fits_summary(*args)

def print_oi_fits_summary(*args):
  """print_oi_fits_summary(OiFits ?)"""
  return _oifits.print_oi_fits_summary(*args)

def dup_oi_target(*args):
  """dup_oi_target(oi_target ?) -> oi_target"""
  return _oifits.dup_oi_target(*args)

def dup_oi_array(*args):
  """dup_oi_array(oi_array ?) -> oi_array"""
  return _oifits.dup_oi_array(*args)

def dup_oi_wavelength(*args):
  """dup_oi_wavelength(oi_wavelength ?) -> oi_wavelength"""
  return _oifits.dup_oi_wavelength(*args)

def dup_oi_vis(*args):
  """dup_oi_vis(oi_vis ?) -> oi_vis"""
  return _oifits.dup_oi_vis(*args)

def dup_oi_vis2(*args):
  """dup_oi_vis2(oi_vis2 ?) -> oi_vis2"""
  return _oifits.dup_oi_vis2(*args)

def dup_oi_t3(*args):
  """dup_oi_t3(oi_t3 ?) -> oi_t3"""
  return _oifits.dup_oi_t3(*args)


